declare_project()

set(CUBIC_SHADER_SOURCES
    ${SHARED_SHADERS_DIR}/shader.frag
    ${SHARED_SHADERS_DIR}/shader.vert)

set(CUBIC_TEXTURES_DIR ${CMAKE_CURRENT_SOURCE_DIR}/textures)

set(CUBIC_MODELS_DIR ${CMAKE_CURRENT_SOURCE_DIR}/models)

add_executable(${PROJECT_NAME}
    main.cpp
	cubic.cpp
	cubic.hpp
	${CUBIC_SHADER_SOURCES}
	${CUBIC_TEXTURE_DIR})

set_target_properties(${PROJECT_NAME} PROPERTIES
	ARCHIVE_OUTPUT_DIRECTORY "${CUBIC_BINARY_DIR}/${CMAKE_BUILD_TYPE}/"
	LIBRARY_OUTPUT_DIRECTORY "${CUBIC_BINARY_DIR}/${CMAKE_BUILD_TYPE}/"
	RUNTIME_OUTPUT_DIRECTORY "${CUBIC_BINARY_DIR}/${CMAKE_BUILD_TYPE}/")


generate_glslc_script(PROJECT_DIR ${CUBIC_BINARY_DIR} SHADER_PATHS ${CUBIC_SHADER_SOURCES})

add_custom_command(TARGET ${PROJECT_NAME}
    POST_BUILD
	COMMAND "${CMAKE_COMMAND}" -E create_symlink "${CUBIC_BINARY_DIR}/shaders" "$<TARGET_FILE_DIR:${PROJECT_NAME}>/shaders")

add_custom_command(TARGET ${PROJECT_NAME}
    POST_BUILD
	COMMAND "${CMAKE_COMMAND}" -E create_symlink "${CUBIC_TEXTURES_DIR}" "$<TARGET_FILE_DIR:${PROJECT_NAME}>/textures")

add_custom_command(TARGET ${PROJECT_NAME}
	POST_BUILD
	COMMAND "${CMAKE_COMMAND}" -E create_symlink "${CUBIC_MODELS_DIR}" "$<TARGET_FILE_DIR:${PROJECT_NAME}>/models")

install (DIRECTORY ${CUBIC_BINARY_DIR}/shaders DESTINATION ${PROJECT_NAME})
install (TARGETS ${PROJECT_NAME} DESTINATION ${PROJECT_NAME})
